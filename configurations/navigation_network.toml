# This is a TOML document. Configuration for the experiment
# The configuration file is used to set the parameters of the simulation

[layers.mapping] # parameters if the mapping cell
population = 800 # (int): size of mapping population

    [layers.mapping.cells] # parameters of the mapping cell
    rho_reset   = 5     # (steps): refractory state (count towards zero)
    tau_syn_inv = 10.00 # (1/ms): inverse synaptic time constant
    tau_mem_inv = 4.500 # (1/ms): inverse membrane time constant
    v_leak      = -40.0 # (mv): leak potential 
    v_th        = -50.0 # (mv): threshold potential 
    v_reset     = -60.0 # (mv): reset potential 

    [layers.mapping.synapses.ampa] # parameters mapping synapses
    input_size     = 1600 # (int): number of mapping layer inputs
    epsilon        = 0.02 # (%): probability of any connection
    stdp.w_max     = 10   # maximum weight
    stdp.eta_plus  = 0.99 # learning rate for weight increase
    stdp.eta_minus = 0.99 # learning rate for weight increase

    [layers.mapping.synapses.gaba] # parameters inhibitory synapses
    input_size     = 800  # (int): number of inhibitory layer inputs
    epsilon        = 0.02 # (%): probability of any connection
    stdp.w_max     = 40   # maximum weight
    stdp.eta_plus  = 0.99 # learning rate for weight increase
    stdp.eta_minus = 0.99 # learning rate for weight increase


[layers.embedding] # parameters if the embedding cell
population = 800 # (int): size of embedding population

    [layers.embedding.cells] # parameters of the embedding cell
    rho_reset   = 5     # (steps): refractory state (count towards zero)
    tau_syn_inv = 10.00 # (1/ms): inverse synaptic time constant
    tau_mem_inv = 4.500 # (1/ms): inverse membrane time constant
    v_leak      = -60.0 # (mv): leak potential 
    v_th        = -50.0 # (mv): threshold potential 
    v_reset     = -60.0 # (mv): reset potential 

    [layers.embedding.synapses.ampa] # parameters embedding synapses
    input_size     = 1600 # (int): number of embedding layer inputs
    epsilon        = 0.02 # (%): probability of any connection
    stdp.w_max     = 10   # maximum weight
    stdp.eta_plus  = 0.99 # learning rate for weight increase
    stdp.eta_minus = 0.99 # learning rate for weight increase

    [layers.embedding.synapses.gaba] # parameters inhibitory synapses
    input_size     = 800  # (int): number of inhibitory layer inputs
    epsilon        = 0.02 # (%): probability of any connection
    stdp.w_max     = 40   # maximum weight
    stdp.eta_plus  = 0.99 # learning rate for weight increase
    stdp.eta_minus = 0.99 # learning rate for weight increase


[layers.inhibitory] # parameters if the mapping cell
population = 800 # (int): size of inhibitory population

    [layers.inhibitory.cells] # parameters of the inhibitory cell
    rho_reset   = 5     # (steps): refractory state (count towards zero)
    tau_syn_inv = 10.00 # (1/ms): inverse synaptic time constant
    tau_mem_inv = 4.500 # (1/ms): inverse membrane time constant
    v_leak      = -50.0 # (mv): leak potential 
    v_th        = -50.0 # (mv): threshold potential 
    v_reset     = -60.0 # (mv): reset potential 

    [layers.inhibitory.synapses.ampa] # parameters mapping synapses
    input_size     = 1600 # (int): number of mapping layer inputs
    epsilon        = 0.02 # (%): probability of any connection
    stdp.w_max     = 10   # maximum weight
    stdp.eta_plus  = 0.99 # learning rate for weight increase
    stdp.eta_minus = 0.99 # learning rate for weight increase

    [layers.inhibitory.synapses.gaba] # parameters inhibitory synapses
    input_size     = 800  # (int): number of inhibitory layer inputs
    epsilon        = 0.02 # (%): probability of any connection
    stdp.w_max     = 40   # maximum weight
    stdp.eta_plus  = 0.99 # learning rate for weight increase
    stdp.eta_minus = 0.99 # learning rate for weight increase
